Шаблон: Декоратор (Decorator)
=======================================================================================================
Цель:

Динамическое добавление новых обязанностей объекту.
=======================================================================================================
Для чего используется:

Используется в качестве альтернативы порождению подклассов для решения функциональности.
=======================================================================================================
Пример использования:

- динамическое и понятное клиентам добавление обязанностей объектам;
- реализация обязанностей, которые могут быть сняты с объекта;
- расширение класса путем порождения подклассов невозможно по каким-либо причинам.
=======================================================================================================